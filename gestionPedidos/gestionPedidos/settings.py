"""
Django settings for gestionPedidos project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
import sys

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# BASE_DIR ya está definido más abajo, pero podemos usarlo aquí si lo movemos o redefinimos temporalmente para diagnóstico
CURRENT_FILE_PATH = Path(__file__).resolve()
PROJECT_CONFIG_DIR = CURRENT_FILE_PATH.parent
BASE_DIR_DIAGNOSIS = PROJECT_CONFIG_DIR.parent # Esto debería ser tu TENDENCIASTDA2025/gestionPedidos/

print("--- DIAGNOSTICO DE RUTAS EN VERCEL ---")
print(f"Python version: {sys.version}")
print(f"sys.path: {sys.path}")
print(f"BASE_DIR (calculado para diagnóstico): {BASE_DIR_DIAGNOSIS}")
print(f"Contenido de BASE_DIR ({BASE_DIR_DIAGNOSIS}): {os.listdir(BASE_DIR_DIAGNOSIS) if BASE_DIR_DIAGNOSIS.exists() else 'NO EXISTE O NO SE PUEDE ACCEDER'}")

models_path = BASE_DIR_DIAGNOSIS / 'models'
print(f"Ruta de la carpeta 'models': {models_path}")
print(f"¿Existe la carpeta 'models'? {models_path.exists()}")

if models_path.exists():
    print(f"Contenido de la carpeta 'models' ({models_path}): {os.listdir(models_path)}")
    init_py_in_models_path = models_path / '__init__.py'
    print(f"Ruta de 'models/__init__.py': {init_py_in_models_path}")
    print(f"¿Existe 'models/__init__.py'? {init_py_in_models_path.exists()}")

    # Chequea una sub-app, por ejemplo 'pedido'
    pedido_app_path = models_path / 'pedido'
    print(f"Ruta de la app 'models/pedido': {pedido_app_path}")
    print(f"¿Existe la carpeta 'models/pedido'? {pedido_app_path.exists()}")
    if pedido_app_path.exists():
        init_py_in_pedido_path = pedido_app_path / '__init__.py'
        print(f"Ruta de 'models/pedido/__init__.py': {init_py_in_pedido_path}")
        print(f"¿Existe 'models/pedido/__init__.py'? {init_py_in_pedido_path.exists()}")
print("--- FIN DIAGNOSTICO ---")


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+c_)5*z%*0qgv_nrq0yku67-bty$j7$ks)zeqdbak!q#*0-8_4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['.vercel.app', 'localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'drf_yasg',
    'models.pedido',      
    'models.producto',     
    'models.itemPedido',   
    'models.entrega',     
    'models.perfil' 
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', 
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'gestionPedidos.urls'


TESTING = 'pytest' in sys.argv[0]

SWAGGER_USE_COMPAT_RENDERERS = False

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated', 
    ]
}

from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATING': True,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'gestionPedidos.wsgi.app'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com' 
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'pedidosg97@gmail.com'
EMAIL_HOST_PASSWORD = 'szzd urgl jgki aemz'
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
